//
//  LoginVC.swift
//  RankingStar
//
//  Created by Jinesh on 13/12/19.
//  Copyright Â© 2019 Etech. All rights reserved.
//

import UIKit
import Material
import SlideMenuControllerSwift

class NoticeVC: BaseVC {
    
    var objNoticeListViewModel : NoticeListViewModel!
    @IBOutlet var navBar: UINavigationBar!
    
    @IBOutlet var tblView: UITableView!
    
    var searchedText : String = ""
    @IBOutlet  var txtSearch: UITextField!
    @IBOutlet var viewContSearch: UIView!
    @IBOutlet var btnSearchClose: UIButton!
    var isBackButtonShow = false
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        objNoticeListViewModel = NoticeListViewModel(vc: self)
        
       // self.view.backgroundColor = Constant.Color.NAVIGATION_BAR_BG_COLOR
        self.view.setRightToLeftPinkGradientViewUI()
        txtSearch.delegate = self
        
        tblView.delegate = self
        tblView.dataSource = self
        
        tblView.register(UINib(nibName: Constant.CellIdentifier.NOTICE_CELL, bundle: nil), forCellReuseIdentifier: Constant.CellIdentifier.NOTICE_CELL)
        tblView.tableFooterView = UIView()
        addRefreashControl(tblView: tblView)
        
        setUIColor()
    }

    override func viewWillAppear(_ animated: Bool) {
       // Util.statusBarColor(color: Constant.Color.NAVIGATION_BAR_BG_COLOR)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        Util.statusBarColor(color: UIColor.clear)
        dismissAlertInfoPresenter()
    }
    
     //MARK: custom method
    func setUIColor()
    {
        getNoticeListApi()
//        Util.statusBarColor(color: Constant.Color.NAVIGATION_BAR_BG_COLOR)
        
        navBar.setUI(navBarText: "NAVIGATION_BAR_NOTICE")
        if(isBackButtonShow)
        {
            self.leftBarButton(navBar: navBar, imgName: Constant.Image.back)
        }else
        {
            self.leftBarButton(navBar: navBar, imgName: Constant.Image.menu)
        }
       // self.leftBarButton(navBar: navBar, imgName: Constant.Image.back)
        self.rightBarSingleBtnWithImage(navBar: navBar, imgName: Constant.Image.charge_station)
        
        txtSearch.setSearchUIWithPlaceholder(placeHolder: "TXT_PLACEHOLDER_SEARCH_TITLE")
        btnSearchClose.setBackgroundImage(UIImage(named: Constant.Image.close), for: .normal)
        viewContSearch.rectViewWithBorderColor()
        txtSearch.addTarget(self, action: #selector(textFieldDidChange(_:)), for: UIControl.Event.editingChanged)
        viewContSearch.isHidden = true
        
    }
    
    func getNoticeListApi() {
        if Util.isNetworkReachable() {
            self.showProgress()
            objNoticeListViewModel.getNoticeListAPI()
        }else {
            self.hideProgress()
            AlertPresenter.alertInformation(fromVC: self, message: "NO_INTERNET_CONNECTION")
        }
    }
    
    func updateAPIFromSideMenu() {
        getNoticeListApi()
    }
    
    override func refresh(sender: AnyObject) {
        getNoticeListApi()
    }
    
    //MARK:- Button clicked
    @IBAction func btnSearchClicked(_ sender: UIButton) {
        viewContSearch.isHidden = true
    }
    
    @IBAction func switchPushAlarmClicked(_ sender: UISwitch) {
    }
    
   
    @IBAction func switchSountNotificationClicked(_ sender: UISwitch) {
    }
    @IBAction func switchVibrationClicked(_ sender: UISwitch) {
    }
    
    //MARK: Button Tabbed
    @objc func textFieldDidChange(_ textField: UITextField) {
        printDebug(textField.text)
    }
    
    @objc override func leftBarButtonClick() {
        if(isBackButtonShow)
        {
            self.navigationController?.popViewController(animated: true)
        }else
        {
            dismissAlertInfoPresenter()
            self.toggleLeft()
        }
    }
    
//    @objc override func leftBarButtonClick2() {
//        self.navigationController?.popViewController(animated: true)
//    }
//
    
    @objc override func rightBtnClickedWithImg() {
        
        if(Util.getIsUserLogin() == "0") {
            AlertPresenter.alertInformation(fromVC: Util.currentNavigationController.topViewController!, message: "ALERT_YOU_HAVE_LOGIN_FIRST")
        }else {
            let objWebViewWithTabVC = WebViewWithTabVC()
            objWebViewWithTabVC.isBackButtonShow = true
            self.navigationController?.pushViewController(objWebViewWithTabVC, animated: true)
        }
    }
    
    @objc override func rightBtnClickedWithImg2() {
        viewContSearch.isHidden = false
    }
    
    //MARK:- View Model Methods
    
    func onApiSuccessHideProgress() {
        self.hideProgress()
        refreshControl.endRefreshing()
    }
    
    func onSuccessApiResponce() {
        if objNoticeListViewModel.arrNoticeList.count == 0 {
            self.showNoDataFoundDialog(uiView: self.tblView)
        }else {
            self.hideNoDataFoundDialog()
            tblView.reloadData()
        }
    }
    
    func onFailApiResponce(message : String) {
        AlertPresenter.alertInformation(fromVC: self, message: message)
    }
  
}

extension NoticeVC : UITableViewDelegate, UITableViewDataSource {

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return objNoticeListViewModel.getNumberOfRecords()
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: Constant.CellIdentifier.NOTICE_CELL) as! NoticeCell
        
        cell.selectionStyle = .none
        cell.imgNext.setImageFit(imageName: Constant.Image.next)
        
//        cell.lblMsgTitle.setNoticeTitleStyle(value: "Title message \(indexPath.row)")
//        cell.lblMsgDate.setNoticeDetailStyle(value: "2019.12.14")
        
//        cell.lblMsgTitle.setBoldEditProfileUIStylePink(value: "Title message \(indexPath.row)")
        //cell.lblMsgDetails.setNormalEditProfileSecondTitleBalck(value: "This is message details \(indexPath.row)")
        
        // Api Responce data
        let objNoticeList = objNoticeListViewModel.arrNoticeList[indexPath.row]
        cell.lblMsgTitle.setNoticeTitleStyle(value: objNoticeList.message_title)
        
        let date = Util.convertDateFormat(date: objNoticeList.created_date, dateFormat: "yyyy-MM-dd HH:mm:ss", newDateFormat: "yyyy.MM.dd")
        cell.lblMsgDate.setNoticeDetailStyle(value: date!)
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        let objNoticeDetailsVC = NoticeDetailsVC()
//        let objNoticeList = objNoticeListViewModel.arrNoticeList[indexPath.row]
//        objNoticeDetailsVC.objNotice = objNoticeList
//        self.navigationController?.pushViewController(objNoticeDetailsVC, animated: true)
        
        let objWebViewChargingStationFreeVC = WebViewChargingStationFreeVC()
        objWebViewChargingStationFreeVC.strWebURL = Constant.API.NOTICE_DETAIL_WEBVIEW
        self.navigationController?.pushViewController(objWebViewChargingStationFreeVC, animated: true)
    }
<<<<<<< HEAD
=======
    
>>>>>>> 03e46be1acf182891d335cd699b848b5dd04316d
}

extension NoticeVC : UITextFieldDelegate {
    func textFieldDidEndEditing(_ textField: UITextField) {
        
        if(textField == txtSearch) {
            self.searchedText = txtSearch.text!
            
            if searchedText.isEmpty {
              //  objChargingStarHistoryModel.arrChargingHistoryModel = []
                self.tblView.reloadData()
            }else {
//                getChargingHistoryAPI()
               // printDebug(txtSearch.text)
                // nothing
            }
        }
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if(textField == txtSearch) {
            textField.resignFirstResponder()
        }
        return true
    }
}

extension NoticeVC : SlideMenuControllerDelegate {
    
    func leftWillOpen() {
        // printDebug("SlideMenuControllerDelegate: leftWillOpen")
    }
}
